---
- name: check current hostname
  slurp:
    src: '/etc/hostname'
  register: current_hostname

- name: choose a random hostname
  set_fact:
    new_hostname: "{{ hostname_prefix }}{{ item }}"
  with_random_choice: "{{ hostname_suffixes }}"

- name: set a random hostname
  hostname:
    name: "{{ new_hostname }}"
  when: ( current_hostname['content'] | b64decode | trim ) == 'raspberrypi'
  become: yes
  become_user: root

- name: write the hostname to a file
  local_action: copy content="{{ new_hostname }}" dest="{{ playbook_dir }}/local/last-hostname"
  when: ( current_hostname['content'] | b64decode | trim ) == 'raspberrypi'

# Prevents sudo warnings and slowdowns.
- name: add the new hostname to /etc/hosts
  lineinfile:
    path: /etc/hosts
    # This is the address that the initial raspberrypi hostname gets
    # mapped to.
    regexp: 127.0.1.1
    state: present
    line: "127.0.1.1	{{ new_hostname }}"
  when: ( current_hostname['content'] | b64decode | trim ) == 'raspberrypi'
  become: yes
  become_user: root

- name: store all available hostnames for a future reset
  copy:
    # https://stackoverflow.com/questions/35183744/jinja2-format-join-the-items-of-a-list
    content: "{{ hostname_suffixes | map('regex_replace', '^(.*)$', hostname_prefix ~ '\\1') | join('\n') }}"
    dest: "{{ available_hostnames_file }}"
    force: yes
  become: yes
  become_user: root

- name: allow access via SSH key
  authorized_key:
    user: pi
    key: "{{ lookup('file', '../../../local/id_rsa.pub') }}"

- name: set the pi user password
  user:
    name: pi
    password: "{{ encrypted_password }}"
  become: yes
  become_user: root
